<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring
		http://camel.apache.org/schema/spring/camel-spring-2.12.3.xsd">
	
	<bean id="visualizer" 
		class="szymanski.cameldemo.visualizer.impl.VisualizerFactory" factory-method="create" />
		
	<bean id="stoppable" class="szymanski.cameldemo.visualizer.impl.SpringContextStoppable">
		<constructor-arg ref="visualizer" />
	</bean>
	
	<bean id="text2Point" class="szymanski.cameldemo.Text2PointProcessor" />
	
	<bean id="adapter0" class="szymanski.cameldemo.VisualizerAdapter">
		<constructor-arg ref="visualizer" />
		<constructor-arg value="0" />
	</bean>
	<bean id="adapter1" class="szymanski.cameldemo.VisualizerAdapter">
		<constructor-arg ref="visualizer" />
		<constructor-arg value="1" />
	</bean>
	<bean id="adapter2" class="szymanski.cameldemo.VisualizerAdapter">
		<constructor-arg ref="visualizer" />
		<constructor-arg value="2" />
	</bean>
	<bean id="adapter3" class="szymanski.cameldemo.VisualizerAdapter">
		<constructor-arg ref="visualizer" />
		<constructor-arg value="3" />
	</bean>	
	
	<camelContext xmlns="http://camel.apache.org/schema/spring">
		<route>
			<from uri="stream:in?promptMessage=Enter%20coordinates (Spring): " />
			<choice>
				<when>
					<spel>#{T(szymanski.cameldemo.CamelUtils).isXml().matches(exchange)}</spel>
					<setBody><xquery type="java.lang.String">concat(/point/x, ' ', /point/y)</xquery></setBody>
					<process ref="text2Point" />
				</when>
				<when>
					<spel>#{T(szymanski.cameldemo.CamelUtils).isPlainText().matches(exchange)}</spel>
					<process ref="text2Point" />
				</when>				
			</choice>
			<choice>
				<when>
					<el><![CDATA[ ${in.body.x < 0 and in.body.y >= 0} ]]></el>
					<to uri="bean:adapter0" />
				</when>
				<when>
					<el><![CDATA[ ${in.body.x >= 0 and in.body.y >= 0} ]]></el>
					<to uri="bean:adapter1" />
				</when>
				<when>
					<el><![CDATA[ ${in.body.x < 0 and in.body.y < 0} ]]></el>
					<to uri="bean:adapter2" />
				</when>
				<when>
					<el><![CDATA[ ${in.body.x >= 0 and in.body.y < 0} ]]></el>
					<to uri="bean:adapter3" />
				</when>			
			</choice>
		</route>
	</camelContext>
</beans>